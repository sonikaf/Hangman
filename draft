import java.io.*;
import java.net.*;

public class server {
    //TODO read port from command line
    static final int PORT = 8080;
    static int sessions;
    public static void main(String[] args) throws IOException {
        ServerSocket s = null;
        Socket socket = null;
        System.out.println("Server Started");
        sessions = 0;
        try {
           try {
               s = new ServerSocket(PORT);
           } catch (IOException e) {
               e.printStackTrace();
           }
           while(true) {
               try {
                 socket = s.accept();
                 sessions++;
               } catch (IOException e) {
                 System.out.println("I/O error: " + e);
               }
               if (sessions <= 3) {
                 new PlayerThread(socket);
               } else {
                 PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);
                 out.println("17server-overloaded");
                 out.close();
                 socket.close();
                 //break threads;
               }
           }
        } catch(IOException e) {
          e.printStackTrace();
        }



      //  threads: try {
      //       while(true) {
      //           // Blocks until a connection occurs:
      //           Socket socket = s.accept();
      //           sessions++;
      //           try {
      //               if (sessions <= 3) new PlayerThread(socket);
      //               //TODO
      //               else {
      //                   //server overload message
      //                   PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);
      //                   out.println("17server-overloaded");
      //                   break threads;
      //               }
      //           } catch(IOException e) {
      //               // If it fails, close the socket,
      //               // otherwise the thread will close it:
      //               break threads;
      //           }
      //       }
      //   } finally {
      //       s.close();
      //       sessions--;
      //   }
      // }
  }
}

class PlayerThread extends Thread {
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;

    public PlayerThread(Socket s) throws IOException {
        socket = s;
        in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);

        out.println("good");
        // try {
        //     String str = in.readLine();
        //     //word guessed a, b and o
        //     out.println("" + (char) 0 + (char) 4 + "_o__ab");
        //
        // } catch (IOException e) {
        //
        // } finally {
        //     try {
        //         socket.close();
        //     } catch(IOException e) {}
        // }
    }
}
